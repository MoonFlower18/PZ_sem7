---
title: "Практическое задание №5"
author: "Журавлева Юлия БИСО-01-20"
format: 
  md:
    output-file: README.md
---
# Исследование информации о состоянии беспроводных сетей

## Цель работы

1. Получить знания о методах исследования радиоэлектронной обстановки.
2. Составить представление о механизмах работы Wi-Fi сетей на канальном и сетевом уровне модели OSI.
3. Закрепить практические навыки использования языка программирования для обработки данных
4. Закрепить знания основных функций обработки данных экосистемы `tidyverse` языка R

## Исходные данные

1.  ОС Windows 10
2.  RStudio Desktop
3.  Интерпретатор языка R 4.2.2
4.  Файл `mir.csv-01.csv`

## План

1. Импортировать данные из файла `mir.csv-01.csv` и привести в вид "аккуратных данных".
2. Провести анализ точек доступа.
3. Провести анализ данных клиентов.
4. Ответить на поставленные вопросы.

## Ход выполнения работы

### Этап 1. Подготовка данных

Для начала установим пакет `dplyr`.

```{r}
library(dplyr)
```

Импортируем данные из общего файла файла в 2 разных датафрейма: анонсы беспроводных точек доступа и запросы на подключение клиентов к известным им точкам доступа. При выводе всего датафрейма заметим, что в первом датафрейме всего 167 строк. 

```{r}
ds1 <- read.csv("mir.csv-01.csv", nrows = 167)
ds1 %>% head(10)
```

Следующим импортируем второй датафрейм - запросы на подключение клиентов к известным им точкам доступа. Заметим, что нужно пропустить несколько строк, которые относятся к предыдущему датафрейму. При задавании номера строки skip нужно смотреть на положение датафрейма. Нужная строка => 169.

```{r}
ds2 <- read.csv("mir.csv-01.csv", skip = 169)
ds2 %>% head(10)
```

Приведём в вид "аккуратных данных" первый датафрейм - анонсы беспроводных точек доступа. 

Посмотрим на первоначальный вид первого датафрейма.

```{r}
ds1 %>% glimpse() 
```

Преобразуем тип данных `chr` в `dttm` для столбцов `First.time.seen` и `First.time.seen`. Это нужно для корректного отображения даты и времени. Затем посмотрим на изменённый датафрейм.

```{r}
ds1$First.time.seen <- as.POSIXct(ds1$First.time.seen, 
                                  format = "%Y-%m-%d %H:%M:%S")
ds1$Last.time.seen <- as.POSIXct(ds1$Last.time.seen, 
                                 format = "%Y-%m-%d %H:%M:%S")
ds1 %>% glimpse() 
```

Далее приведём в вид "аккуратных данных" второй датафрейм - запросы на подключение клиентов к известным им точкам доступа. 

Посмотрим на первоначальный вид второго датафрейм.

```{r}
ds2 %>% glimpse() 
```

Преобразуем тип данных `chr` в `dttm` для столбцов `First.time.seen` и `First.time.seen`. Это нужно для корректного отображения даты и времени. Затем посмотрим на изменённый датафрейм.

```{r}
ds2$First.time.seen <- as.POSIXct(ds2$First.time.seen, 
                                  format = "%Y-%m-%d %H:%M:%S")
ds2$Last.time.seen <- as.POSIXct(ds2$Last.time.seen, 
                                 format = "%Y-%m-%d %H:%M:%S")
ds2 %>% glimpse() 
```

Заметим, что в некоторых данных есть лишние пробелы, которые нужно убрать, для читабельности датафреймов. 

```{r}
ds1 <- mutate_all(ds1, trimws) 
ds1 %>% glimpse() 
```

```{r}
ds2 <- mutate_all(ds2, trimws) 
ds2 %>% glimpse() 
```

### Этап 2. Анализ

#### Точки доступа

1. Определим небезопасные точки доступа (без шифрования – OPN).
```{r}
open_df <- ds1 %>% filter(Privacy == "OPN") %>%
  select(BSSID, Privacy, LAN.IP, ESSID)

open_df
```

2. Определим производителя для каждого обнаруженного устройства. Для начала найдём уникальные устройства из списка обнаруженных. 

```{r}
mac_id <- sub("^([A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}).*", "\\1", open_df$BSSID) %>% unique()

mac_id
```

С помощью сервиса https://www.wireshark.org/tools/oui-lookup.html определим производителя для каждого обнаруженного устройства.

- 00:03:7A Taiyo Yuden Co., Ltd.
- 00:03:7F Atheros Communications, Inc.
* 00:25:00 Apple, Inc.
* 00:26:99 Cisco Systems, Inc
+ E0:D9:E3 Eltex Enterprise Ltd.
+ E8:28:C1 Eltex Enterprise Ltd.

#### Данные клиентов



## Оценка результатов

ааа

## Вывод

ааа