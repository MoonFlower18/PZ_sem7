---
title: "Практическое задание №3"
author: "Журавлева Юлия БИСО-01-20"
format: 
  md:
    output-file: README.md
---
# Основы обработки данных с помощью R с использованием пакета tidyverse.

## Цель работы

1. Закрепить навыки исследования данных журнала Windows Active Directory
2. Изучить структуру журнала системы Windows Active Directory
3. Закрепить практические навыки использования языка программирования R для обработки данных
4. Закрепить знания основных функций обработки данных экосистемы tidyverse языка R

## Исходные данные

1.  ОС Windows 10
2.  RStudio Desktop
3.  Интерпретатор языка R 4.2.2
4.  Архив `dataset.tar.gz`

## План

1. Импортировать данные из архива `dataset.tar.gz` и привести в вид "аккуратных данных".
2. Провести анализ данных и ответить на поставленные вопросы.

## Ход выполнения работы

### Этап 1. Подготовка данных

Для начала установим необходимые пакеты.

```{r}
library(dplyr)
library(jsonlite)
library(tidyr)
library(xml2) #для кодов винды
library(rvest) #для кодов винды
```


#### 1. Импортируйте данные в R. 

```{r}
url <- "https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz"

download.file(url, destfile = tf <- tempfile(fileext = ".tar.gz"), mode = "wb")

temp_dir <- tempdir()
untar(tf, exdir = temp_dir)

json <- list.files(temp_dir, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
ds <- stream_in(file(json))
ds %>% head(10)
```

```{r}
#для кодов винды 

win_url <- "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor"
win_html <- xml2::read_html(win_url)
win_df <- rvest::html_table(win_html)
```

#### 2. Привести датасеты в вид “аккуратных данных”, преобразовать типы столбцов в соответствии с типом данных

```{r}
url <- "https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz"
download.file(url, destfile = tf <- tempfile(fileext = ".tar.gz"), mode = "wb")
temp_dir <- tempdir()
untar(tf, exdir = temp_dir)

json <- list.files(temp_dir, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
ds_json <- stream_in(file(json))
```

```{r}
ds <- ds_json %>%
  mutate(`@timestamp` = as.POSIXct(`@timestamp`, format = "%Y-%m-%dT%H:%M:%OSZ", tz = "UTC")) %>%
  rename(timestamp = `@timestamp`, metadata = `@metadata`)

ds
```

#### 3. Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
ds %>% glimpse
```

### Этап 2. Анализ

#### 1. Раскройте датафрейм избавившись от вложенных датафреймов.

```{r}

```

#### 2. Минимизируйте количество колонок в датафрейме – уберите колоки с единственным значением параметра.

```{r}

```

#### 3. Какое количество хостов представлено в данном датасете?

```{r}

```

#### 4. Подготовьте датафрейм с расшифровкой Windows Event_ID, приведите типы данных к типу их значений.

```{r}

```

#### 5. Есть ли в логе события с высоким и средним уровнем значимости? Сколько их?

```{r}

```

## Оценка результатов

ааа

## Вывод

помогите